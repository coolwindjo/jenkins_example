import java.text.SimpleDateFormat

static String TOOL_GIT_DIR = 'J:/DEval/source/tools'
static String SCRIPT_DIR = TOOL_GIT_DIR + '/TLANQOS_AutomationSystem/scripts/KTAS_LND'
String dataSet=''
String dateTime=''

node('MASTER') {

    def dateFormat = new SimpleDateFormat("yyMMdd_HHmmss")
    def date = new Date()
    dateTime=dateFormat.format(date)
    withEnv(['DATE_TIME='+dateTime]) {

        stage('Preparation') {
            println('Current time is ' + DATE_TIME)
            echo '[MASTER] Updating tools git...'
            dir(TOOL_GIT_DIR) {
                bat('''git reset --hard HEAD^^
                    git pull
                    ''')
            }
            if (CHERRY_PICIK_JENKINS_SCRIPT_COMMIT != 'HEAD') {
                echo '[MASTER] CHERRY_PICIK_JENKINS_SCRIPT_COMMIT is being parsed to start a test...'
                int idBegin = CHERRY_PICIK_JENKINS_SCRIPT_COMMIT.indexOf('://')+3
                int idEnd = CHERRY_PICIK_JENKINS_SCRIPT_COMMIT.indexOf('@')
                String beforeId = CHERRY_PICIK_JENKINS_SCRIPT_COMMIT.substring(0,idBegin)
                String afterId = CHERRY_PICIK_JENKINS_SCRIPT_COMMIT.substring(idEnd)
                String cherrypickToolsCommitHead = beforeId + 'seunghyeon.jo' + afterId
                println('[MASTER] Trying to apply [' + cherrypickToolsCommitHead + ']...')
                dir(TOOL_GIT_DIR) {
                    bat(cherrypickToolsCommitHead)
                }
                echo '[MASTER] Waiting 3 seconds for applying the cherry-picked commit...'
                sleep 3 // seconds
            }

            echo '[MASTER] Starting to run the master preparation script...'
            dataSet = load(SCRIPT_DIR + '/run_master_preparation_script.groovy')
            echo '[MASTER] Preparation is finished.'
        }

        stage('Build') {
            echo '[MASTER] Starting to run the master build script...'
            load(SCRIPT_DIR + '/run_master_build_script.groovy')
            echo '[MASTER] Build is finished.'
        }

        String msFinTime = dateTime
        stage('Results') {
            echo '[MASTER] Starting to run the master results script...'
            load(SCRIPT_DIR + '/run_master_results_script.groovy')
            echo '[MASTER] Results is finished.'
            println('[MASTER] Master has done at ' + msFinTime)
        }

    }   //withEnv(['DATE_TIME='+dateTime]) {
}

node('SLAVE_LND||SLAVE_LND2||SLAVE_LND3||SLAVE1') {

    def dateFormat = new SimpleDateFormat("yyyyMMdd_HHmmss")
    def date = new Date()
    withEnv(['DATE_TIME='+dateTime, 'DATA_SET='+dataSet]) {

        stage('Preparation') {
            println('Current time is ' + DATE_TIME)
            println('Current data set is ' + DATA_SET)
            echo '[SLAVE] Starting to run the slave preparation script...'
            load(SCRIPT_DIR + '/run_slave_preparation_script.groovy')
            echo '[SLAVE] Preparation is finished.'
        }

        stage('Build') {
            echo '[SLAVE] Starting to run the slave build script...'
            load(SCRIPT_DIR + '/run_slave_build_script.groovy')
            echo '[SLAVE] Build is finished.'
        }

        String slFinTime = dateFormat.format(date)
        stage('Results') {
            echo '[SLAVE] Starting to run the slave results script...'
            load(SCRIPT_DIR + '/run_slave_results_script.groovy')
            echo '[SLAVE] Results is finished.'
            println('[SLAVE] Slave has done at ' + slFinTime)
        }
    }   //withEnv(['DATE_TIME='+dateTime, 'DATA_SET='+dataSet]) {

}